ARM GAS  /tmp/cc9BophD.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"app_freertos.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/app_freertos.c"
  20              		.section	.text.StartCmdTask,"ax",%progbits
  21              		.align	1
  22              		.global	StartCmdTask
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	StartCmdTask:
  28              	.LFB139:
   1:Core/Src/app_freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/app_freertos.c **** /**
   3:Core/Src/app_freertos.c ****   ******************************************************************************
   4:Core/Src/app_freertos.c ****   * File Name          : app_freertos.c
   5:Core/Src/app_freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/app_freertos.c ****   ******************************************************************************
   7:Core/Src/app_freertos.c ****   * @attention
   8:Core/Src/app_freertos.c ****   *
   9:Core/Src/app_freertos.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/app_freertos.c ****   * All rights reserved.
  11:Core/Src/app_freertos.c ****   *
  12:Core/Src/app_freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/app_freertos.c ****   * in the root directory of this software component.
  14:Core/Src/app_freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/app_freertos.c ****   *
  16:Core/Src/app_freertos.c ****   ******************************************************************************
  17:Core/Src/app_freertos.c ****   */
  18:Core/Src/app_freertos.c **** /* USER CODE END Header */
  19:Core/Src/app_freertos.c **** 
  20:Core/Src/app_freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/app_freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/app_freertos.c **** #include "task.h"
  23:Core/Src/app_freertos.c **** #include "main.h"
  24:Core/Src/app_freertos.c **** #include "cmsis_os.h"
  25:Core/Src/app_freertos.c **** 
  26:Core/Src/app_freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/app_freertos.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/app_freertos.c **** #include "robot.h"
  29:Core/Src/app_freertos.c **** /* USER CODE END Includes */
  30:Core/Src/app_freertos.c **** 
ARM GAS  /tmp/cc9BophD.s 			page 2


  31:Core/Src/app_freertos.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/app_freertos.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/app_freertos.c **** 
  34:Core/Src/app_freertos.c **** /* USER CODE END PTD */
  35:Core/Src/app_freertos.c **** 
  36:Core/Src/app_freertos.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/app_freertos.c **** /* USER CODE BEGIN PD */
  38:Core/Src/app_freertos.c **** 
  39:Core/Src/app_freertos.c **** /* USER CODE END PD */
  40:Core/Src/app_freertos.c **** 
  41:Core/Src/app_freertos.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/app_freertos.c **** /* USER CODE BEGIN PM */
  43:Core/Src/app_freertos.c **** 
  44:Core/Src/app_freertos.c **** /* USER CODE END PM */
  45:Core/Src/app_freertos.c **** 
  46:Core/Src/app_freertos.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/app_freertos.c **** /* USER CODE BEGIN Variables */
  48:Core/Src/app_freertos.c **** 
  49:Core/Src/app_freertos.c **** /* USER CODE END Variables */
  50:Core/Src/app_freertos.c **** osThreadId cmdTaskHandle;
  51:Core/Src/app_freertos.c **** 
  52:Core/Src/app_freertos.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/app_freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  54:Core/Src/app_freertos.c **** 
  55:Core/Src/app_freertos.c **** /* USER CODE END FunctionPrototypes */
  56:Core/Src/app_freertos.c **** 
  57:Core/Src/app_freertos.c **** void StartCmdTask(void const * argument);
  58:Core/Src/app_freertos.c **** 
  59:Core/Src/app_freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  60:Core/Src/app_freertos.c **** 
  61:Core/Src/app_freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
  62:Core/Src/app_freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  63:Core/Src/app_freertos.c **** 
  64:Core/Src/app_freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
  65:Core/Src/app_freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
  66:Core/Src/app_freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
  67:Core/Src/app_freertos.c **** 
  68:Core/Src/app_freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  69:Core/Src/app_freertos.c **** {
  70:Core/Src/app_freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  71:Core/Src/app_freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  72:Core/Src/app_freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  73:Core/Src/app_freertos.c ****   /* place for user code */
  74:Core/Src/app_freertos.c **** }
  75:Core/Src/app_freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
  76:Core/Src/app_freertos.c **** 
  77:Core/Src/app_freertos.c **** /**
  78:Core/Src/app_freertos.c ****   * @brief  FreeRTOS initialization
  79:Core/Src/app_freertos.c ****   * @param  None
  80:Core/Src/app_freertos.c ****   * @retval None
  81:Core/Src/app_freertos.c ****   */
  82:Core/Src/app_freertos.c **** void MX_FREERTOS_Init(void) {
  83:Core/Src/app_freertos.c ****   /* USER CODE BEGIN Init */
  84:Core/Src/app_freertos.c **** 
  85:Core/Src/app_freertos.c ****   /* USER CODE END Init */
  86:Core/Src/app_freertos.c **** 
  87:Core/Src/app_freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
ARM GAS  /tmp/cc9BophD.s 			page 3


  88:Core/Src/app_freertos.c ****   /* add mutexes, ... */
  89:Core/Src/app_freertos.c ****   /* USER CODE END RTOS_MUTEX */
  90:Core/Src/app_freertos.c **** 
  91:Core/Src/app_freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
  92:Core/Src/app_freertos.c ****   /* add semaphores, ... */
  93:Core/Src/app_freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
  94:Core/Src/app_freertos.c **** 
  95:Core/Src/app_freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
  96:Core/Src/app_freertos.c ****   /* start timers, add new ones, ... */
  97:Core/Src/app_freertos.c ****   /* USER CODE END RTOS_TIMERS */
  98:Core/Src/app_freertos.c **** 
  99:Core/Src/app_freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 100:Core/Src/app_freertos.c ****   /* add queues, ... */
 101:Core/Src/app_freertos.c ****   /* USER CODE END RTOS_QUEUES */
 102:Core/Src/app_freertos.c **** 
 103:Core/Src/app_freertos.c ****   /* Create the thread(s) */
 104:Core/Src/app_freertos.c ****   /* definition and creation of cmdTask */
 105:Core/Src/app_freertos.c ****   osThreadDef(cmdTask, StartCmdTask, osPriorityNormal, 0, 128);
 106:Core/Src/app_freertos.c ****   cmdTaskHandle = osThreadCreate(osThread(cmdTask), NULL);
 107:Core/Src/app_freertos.c **** 
 108:Core/Src/app_freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 109:Core/Src/app_freertos.c ****   /* add threads, ... */
 110:Core/Src/app_freertos.c ****   /* USER CODE END RTOS_THREADS */
 111:Core/Src/app_freertos.c **** 
 112:Core/Src/app_freertos.c **** }
 113:Core/Src/app_freertos.c **** 
 114:Core/Src/app_freertos.c **** /* USER CODE BEGIN Header_StartCmdTask */
 115:Core/Src/app_freertos.c **** /**
 116:Core/Src/app_freertos.c ****   * @brief  Function implementing the cmdTask thread.
 117:Core/Src/app_freertos.c ****   * @param  argument: Not used
 118:Core/Src/app_freertos.c ****   * @retval None
 119:Core/Src/app_freertos.c ****   */
 120:Core/Src/app_freertos.c **** /* USER CODE END Header_StartCmdTask */
 121:Core/Src/app_freertos.c **** void StartCmdTask(void const * argument)
 122:Core/Src/app_freertos.c **** {
  29              		.loc 1 122 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35              		.loc 1 122 1 is_stmt 0 view .LVU1
  36 0000 08B5     		push	{r3, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 3, -8
  40              		.cfi_offset 14, -4
  41              	.LVL1:
  42              	.L2:
 123:Core/Src/app_freertos.c ****   /* USER CODE BEGIN StartCmdTask */
 124:Core/Src/app_freertos.c ****   /* Infinite loop */
 125:Core/Src/app_freertos.c ****   for(;;)
  43              		.loc 1 125 3 is_stmt 1 view .LVU2
 126:Core/Src/app_freertos.c ****   {
 127:Core/Src/app_freertos.c ****       HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
  44              		.loc 1 127 7 view .LVU3
  45 0002 4FF40051 		mov	r1, #8192
ARM GAS  /tmp/cc9BophD.s 			page 4


  46 0006 0448     		ldr	r0, .L4
  47 0008 FFF7FEFF 		bl	HAL_GPIO_TogglePin
  48              	.LVL2:
 128:Core/Src/app_freertos.c ****       osDelay(1000);
  49              		.loc 1 128 7 discriminator 1 view .LVU4
  50 000c 4FF47A70 		mov	r0, #1000
  51 0010 FFF7FEFF 		bl	osDelay
  52              	.LVL3:
 125:Core/Src/app_freertos.c ****   {
  53              		.loc 1 125 3 view .LVU5
  54 0014 F5E7     		b	.L2
  55              	.L5:
  56 0016 00BF     		.align	2
  57              	.L4:
  58 0018 00080048 		.word	1207961600
  59              		.cfi_endproc
  60              	.LFE139:
  62              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
  63              		.align	1
  64              		.global	vApplicationGetIdleTaskMemory
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  69              	vApplicationGetIdleTaskMemory:
  70              	.LVL4:
  71              	.LFB137:
  69:Core/Src/app_freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  72              		.loc 1 69 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  70:Core/Src/app_freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  77              		.loc 1 70 3 view .LVU7
  70:Core/Src/app_freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  78              		.loc 1 70 25 is_stmt 0 view .LVU8
  79 0000 034B     		ldr	r3, .L7
  80 0002 0360     		str	r3, [r0]
  71:Core/Src/app_freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  81              		.loc 1 71 3 is_stmt 1 view .LVU9
  71:Core/Src/app_freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  82              		.loc 1 71 27 is_stmt 0 view .LVU10
  83 0004 034B     		ldr	r3, .L7+4
  84 0006 0B60     		str	r3, [r1]
  72:Core/Src/app_freertos.c ****   /* place for user code */
  85              		.loc 1 72 3 is_stmt 1 view .LVU11
  72:Core/Src/app_freertos.c ****   /* place for user code */
  86              		.loc 1 72 25 is_stmt 0 view .LVU12
  87 0008 8023     		movs	r3, #128
  88 000a 1360     		str	r3, [r2]
  74:Core/Src/app_freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
  89              		.loc 1 74 1 view .LVU13
  90 000c 7047     		bx	lr
  91              	.L8:
  92 000e 00BF     		.align	2
  93              	.L7:
  94 0010 00000000 		.word	xIdleTaskTCBBuffer
ARM GAS  /tmp/cc9BophD.s 			page 5


  95 0014 00000000 		.word	xIdleStack
  96              		.cfi_endproc
  97              	.LFE137:
  99              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 100              		.align	1
 101              		.global	MX_FREERTOS_Init
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 106              	MX_FREERTOS_Init:
 107              	.LFB138:
  82:Core/Src/app_freertos.c ****   /* USER CODE BEGIN Init */
 108              		.loc 1 82 29 is_stmt 1 view -0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 32
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112 0000 10B5     		push	{r4, lr}
 113              	.LCFI1:
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 4, -8
 116              		.cfi_offset 14, -4
 117 0002 88B0     		sub	sp, sp, #32
 118              	.LCFI2:
 119              		.cfi_def_cfa_offset 40
 105:Core/Src/app_freertos.c ****   cmdTaskHandle = osThreadCreate(osThread(cmdTask), NULL);
 120              		.loc 1 105 3 view .LVU15
 121 0004 0DF1040C 		add	ip, sp, #4
 122 0008 074C     		ldr	r4, .L11
 123 000a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 124 000c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 125 0010 94E80700 		ldm	r4, {r0, r1, r2}
 126 0014 8CE80700 		stm	ip, {r0, r1, r2}
 106:Core/Src/app_freertos.c **** 
 127              		.loc 1 106 3 view .LVU16
 106:Core/Src/app_freertos.c **** 
 128              		.loc 1 106 19 is_stmt 0 view .LVU17
 129 0018 0021     		movs	r1, #0
 130 001a 01A8     		add	r0, sp, #4
 131 001c FFF7FEFF 		bl	osThreadCreate
 132              	.LVL5:
 106:Core/Src/app_freertos.c **** 
 133              		.loc 1 106 17 discriminator 1 view .LVU18
 134 0020 024B     		ldr	r3, .L11+4
 135 0022 1860     		str	r0, [r3]
 112:Core/Src/app_freertos.c **** 
 136              		.loc 1 112 1 view .LVU19
 137 0024 08B0     		add	sp, sp, #32
 138              	.LCFI3:
 139              		.cfi_def_cfa_offset 8
 140              		@ sp needed
 141 0026 10BD     		pop	{r4, pc}
 142              	.L12:
 143              		.align	2
 144              	.L11:
 145 0028 00000000 		.word	.LANCHOR0
 146 002c 00000000 		.word	cmdTaskHandle
 147              		.cfi_endproc
ARM GAS  /tmp/cc9BophD.s 			page 6


 148              	.LFE138:
 150              		.section	.rodata.str1.4,"aMS",%progbits,1
 151              		.align	2
 152              	.LC0:
 153 0000 636D6454 		.ascii	"cmdTask\000"
 153      61736B00 
 154              		.section	.bss.xIdleStack,"aw",%nobits
 155              		.align	2
 158              	xIdleStack:
 159 0000 00000000 		.space	512
 159      00000000 
 159      00000000 
 159      00000000 
 159      00000000 
 160              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
 161              		.align	2
 164              	xIdleTaskTCBBuffer:
 165 0000 00000000 		.space	84
 165      00000000 
 165      00000000 
 165      00000000 
 165      00000000 
 166              		.global	cmdTaskHandle
 167              		.section	.bss.cmdTaskHandle,"aw",%nobits
 168              		.align	2
 171              	cmdTaskHandle:
 172 0000 00000000 		.space	4
 173              		.section	.rodata
 174              		.align	2
 175              		.set	.LANCHOR0,. + 0
 176              	.LC2:
 177 0000 00000000 		.word	.LC0
 178 0004 00000000 		.word	StartCmdTask
 179 0008 0000     		.short	0
 180 000a 0000     		.space	2
 181 000c 00000000 		.word	0
 182 0010 80000000 		.word	128
 183 0014 00000000 		.word	0
 184 0018 00000000 		.word	0
 185              		.text
 186              	.Letext0:
 187              		.file 2 "/home/yml/mondrian/arm-gnu-toolchain-13.2.Rel1-x86_64-arm-none-eabi/arm-none-eabi/include
 188              		.file 3 "/home/yml/mondrian/arm-gnu-toolchain-13.2.Rel1-x86_64-arm-none-eabi/arm-none-eabi/include
 189              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 190              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 191              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 192              		.file 7 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 193              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 194              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
ARM GAS  /tmp/cc9BophD.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 app_freertos.c
     /tmp/cc9BophD.s:21     .text.StartCmdTask:00000000 $t
     /tmp/cc9BophD.s:27     .text.StartCmdTask:00000000 StartCmdTask
     /tmp/cc9BophD.s:58     .text.StartCmdTask:00000018 $d
     /tmp/cc9BophD.s:63     .text.vApplicationGetIdleTaskMemory:00000000 $t
     /tmp/cc9BophD.s:69     .text.vApplicationGetIdleTaskMemory:00000000 vApplicationGetIdleTaskMemory
     /tmp/cc9BophD.s:94     .text.vApplicationGetIdleTaskMemory:00000010 $d
     /tmp/cc9BophD.s:164    .bss.xIdleTaskTCBBuffer:00000000 xIdleTaskTCBBuffer
     /tmp/cc9BophD.s:158    .bss.xIdleStack:00000000 xIdleStack
     /tmp/cc9BophD.s:100    .text.MX_FREERTOS_Init:00000000 $t
     /tmp/cc9BophD.s:106    .text.MX_FREERTOS_Init:00000000 MX_FREERTOS_Init
     /tmp/cc9BophD.s:145    .text.MX_FREERTOS_Init:00000028 $d
     /tmp/cc9BophD.s:171    .bss.cmdTaskHandle:00000000 cmdTaskHandle
     /tmp/cc9BophD.s:151    .rodata.str1.4:00000000 $d
     /tmp/cc9BophD.s:155    .bss.xIdleStack:00000000 $d
     /tmp/cc9BophD.s:161    .bss.xIdleTaskTCBBuffer:00000000 $d
     /tmp/cc9BophD.s:168    .bss.cmdTaskHandle:00000000 $d
     /tmp/cc9BophD.s:174    .rodata:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_TogglePin
osDelay
osThreadCreate
